- content: You are a helpful assistant.
  role: system
- content: Write out a set of rules that can help an AI classify whether some given
    text is "positive" or "negative"
  role: user
- content: "Here's a set of rules that can help an AI classify whether some given\
    \ text is \"positive\" or \"negative\":\n\n**Rule 1: Tokenization**\n\n* Split\
    \ the input text into individual words or tokens.\n* Remove punctuation marks,\
    \ special characters, and stop words (common words like \"the\", \"and\", etc.\
    \ that don't carry much meaning).\n\n**Rule 2: Sentiment Analysis**\n\n* For each\
    \ token, check if it has a sentiment-bearing word (e.g. \"happy\", \"good\", \"\
    bad\", etc.).\n* If a token has a sentiment-bearing word, assign it a sentiment\
    \ score:\n\t+ Positive: +1\n\t+ Negative: -1\n\t+ Neutral: 0\n\n**Rule 3: Contextual\
    \ Analysis**\n\n* For each token, consider its context:\n\t+ If a token is preceded\
    \ by a negative word (e.g. \"not\", \"never\", etc.), flip its sentiment score.\n\
    \t+ If a token is followed by a positive word (e.g. \"very\", \"extremely\", etc.),\
    \ amplify its sentiment score.\n\t+ If a token is part of a phrase with a clear\
    \ sentiment (e.g. \"I love this product\", \"I hate this service\"), assign it\
    \ the sentiment score of the phrase.\n\n**Rule 4: Sentiment Aggregation**\n\n\
    * Calculate the overall sentiment score for the text by summing up the sentiment\
    \ scores of individual tokens.\n* If the overall sentiment score is:\n\t+ Positive:\
    \ classify the text as \"positive\".\n\t+ Negative: classify the text as \"negative\"\
    .\n\t+ Neutral: classify the text as \"neutral\".\n\n**Rule 5: Handling Ambiguity**\n\
    \n* If a token has multiple possible sentiment scores (e.g. \"fine\" can be both\
    \ positive and negative), use contextual analysis to disambiguate its sentiment.\n\
    * If a token is unclear or ambiguous, assign it a neutral sentiment score.\n\n\
    **Rule 6: Handling Special Cases**\n\n* Handle special cases like sarcasm, irony,\
    \ and figurative language by using domain-specific knowledge and contextual analysis.\n\
    * For example, if a text says \"What a wonderful day!\" but the weather is terrible,\
    \ classify it as \"negative\" due to the irony.\n\n**Rule 7: Continuous Improvement**\n\
    \n* Continuously update and refine the sentiment analysis model using labeled\
    \ training data and feedback from users.\n* Monitor and adjust the model's performance\
    \ to ensure it accurately classifies text as \"positive\", \"negative\", or \"\
    neutral\".\n\nBy following these rules, an AI can develop a robust sentiment analysis\
    \ model that accurately classifies text as \"positive\" or \"negative\". However,\
    \ keep in mind that sentiment analysis is a complex task, and the model may still\
    \ make mistakes."
  role: assistant
  timeout: false
